[![Open in Visual Studio Code](https://classroom.github.com/assets/open-in-vscode-718a45dd9cf7e7f842a935f5ebbe5719a5e09af4491e668f4dbf3b35d5cca122.svg)](https://classroom.github.com/online_ide?assignment_repo_id=11025883&assignment_repo_type=AssignmentRepo)
## Project Description

You are tasked with building a Calorie Counter website using Django. The website should allow users to keep track of the number of calories they consume each day. The website should have the following features:

-  Ability to add new food items with their respective calorie count
-  Ability to view a list of all food items added so far
-  Ability to remove food items from the list
-  Ability to calculate and display the total number of calories consumed for the day
-  Ability to reset the calorie count for the day

In addition to these features, the website should be styled using Bootstrap and custom CSS to make it visually appealing and user-friendly.

## Technical Requirements

To complete this project, you will need to use the following technologies and tools:

1. Python 3.x
2. Django 3.x
3. HTML5
4. CSS3
5. Bootstrap 4.x

You will need to create a new Django project and a new Django app to build the website. The website should include multiple HTML templates, one for each page of the website. You should use Django's template inheritance feature to create a base template that can be used as the layout for all other templates.

-  The website should be styled using Bootstrap and custom CSS. You should include a custom stylesheet that defines the styles for the various elements on the page, including the navigation menu, the header, and the calorie counter.

-  You will not need to use models or databases for this project. Instead, you can store the food items and their respective calorie counts in a Python list or dictionary.

-  The website should be visually appealing and polished, with an attractive color scheme and design elements.
-  The code should be consistently indented and formatted for easy readability.
-  The code should be well-documented with comments explaining the purpose and functionality of each section of code.
- The project should use Git for version control, with regular commits, at least 30, and appropriate commit messages.
- The project should be deployed to a live website or hosting platform e.g render, and the link to the live site should be provided in the README.md file.
